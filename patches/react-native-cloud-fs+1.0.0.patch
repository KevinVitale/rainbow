diff --git a/node_modules/react-native-cloud-fs/ios/RNCloudFs.m b/node_modules/react-native-cloud-fs/ios/RNCloudFs.m
index f978a65..75aa4f8 100644
--- a/node_modules/react-native-cloud-fs/ios/RNCloudFs.m
+++ b/node_modules/react-native-cloud-fs/ios/RNCloudFs.m
@@ -157,6 +157,22 @@ - (dispatch_queue_t)methodQueue
     }
 }
 
+RCT_EXPORT_METHOD(deleteFromCloud:(NSDictionary *)item
+resolver:(RCTPromiseResolveBlock)resolver
+rejecter:(RCTPromiseRejectBlock)rejecter) {
+   NSError *error;
+   
+    NSFileManager* fileManager = [NSFileManager defaultManager];
+    [fileManager removeItemAtPath:item[@"path"] error:&error];
+    if(error) {
+        return rejecter(@"error", error.description, nil);
+    }
+    bool result = YES;
+    return resolver(@(result));
+
+}
+
+
 RCT_EXPORT_METHOD(copyToCloud:(NSDictionary *)options
                   resolver:(RCTPromiseResolveBlock)resolve
                   rejecter:(RCTPromiseRejectBlock)reject) {
@@ -211,6 +227,13 @@ - (dispatch_queue_t)methodQueue
             NSString *tempFile = [NSTemporaryDirectory() stringByAppendingPathComponent:filename];
 
             NSError *error;
+            if([fileManager fileExistsAtPath:tempFile]){
+                [fileManager removeItemAtPath:tempFile error:&error];
+                if(error) {
+                    return reject(@"error", error.description, nil);
+                }
+            }
+
             [fileManager copyItemAtPath:[sourceURL path] toPath:tempFile error:&error];
             if(error) {
                 return reject(@"error", error.description, nil);
@@ -268,17 +291,24 @@ - (void) moveToICloud:(NSURL *)ubiquityURL :(NSString *)tempFile :(NSString *)de
 
         NSURL* targetFile = [ubiquityURL URLByAppendingPathComponent:destPath];
         NSURL *dir = [targetFile URLByDeletingLastPathComponent];
-        NSString *name = [targetFile lastPathComponent];
 
         NSURL* uniqueFile = targetFile;
         
-        int count = 1;
-        while([fileManager fileExistsAtPath:uniqueFile.path]) {
-            NSString *uniqueName = [NSString stringWithFormat:@"%i.%@", count, name];
-            uniqueFile = [dir URLByAppendingPathComponent:uniqueName];
-            count++;
+        if([fileManager fileExistsAtPath:uniqueFile.path]){
+            NSError *error;
+            [fileManager removeItemAtPath:uniqueFile.path error:&error];
+            if(error) {
+                return rejecter(@"error", error.description, nil);
+            }
         }
 
+//        int count = 1;
+//        while([fileManager fileExistsAtPath:uniqueFile.path]) {
+//            NSString *uniqueName = [NSString stringWithFormat:@"%i.%@", count, name];
+//            uniqueFile = [dir URLByAppendingPathComponent:uniqueName];
+//            count++;
+//        }
+
         RCTLogTrace(@"Target file: %@", uniqueFile.path);
 
         if (![fileManager fileExistsAtPath:dir.path]) {
